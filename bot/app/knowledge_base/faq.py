# knowledge_base/faq.py
from typing import Optional, Dict, List

class FAQ:
    def __init__(self):
        """Инициализация базы знаний"""
        self.faq_data = {
            'доставка': {
                'keywords': ['доставка', 'курьер', 'домой', 'получить заказ'],
                'response': ("У нас имеется сервис «доставка до двери», чтобы оставить заявку:\n"
                           "1. Перейдите в раздел «Заказы»\n"
                           "2. Выберите «Прибыл в пункт выдачи»\n"
                           "3. Поставьте галочку «доставка до двери»\n"
                           "4. Заполните адрес и оплатите")
            },
            'график': {
                'keywords': ['график', 'работаете', 'время работы', 'до скольки'],
                'response': ("График работы складов:\n"
                           "Уточнить график: 87055188988")
            },
            'возврат': {
                'keywords': ['возврат', 'вернуть', 'брак', 'недостача', 'возместить'],
                'response': ("Варианты возврата:\n"
                           "- Брак товара\n"
                           "- Товар поврежден\n"
                           "- Несоответствие описанию\n"
                           "- Неверный размер/цвет\n"
                           "- Недостача\n\n")
            },
            'поступление': {
                'keywords': ['поступили', 'пришли', 'поступление', 'где товар', 'где мой товар', 'где заказ', 'пришел ли'],
                'response': ("Поступившие товары смотрите в нашем мобильном приложении в разделе "
                           "«Заказы» - «Прибыл в пункт выдачи». Если в этом статусе есть товары, "
                           "значит ваш заказ поступил и его можно забрать из пункта выдачи.")
            },
            'карта': {
                'keywords': ['карта', 'банковская карта', 'срок карты', 'поменять карту', 'новая карта'],
                'response': ("Если срок действия банковской карты истек, необходимо добавить новую карту в Pinduoduo.\n")
            },
            'неизвестные_товары': {
                'keywords': ['неизвестные товары', 'неизвестный товар', 'попал в неизвестные'],
                'response': ("Если товар попал в неизвестные, это значит, что магазин неправильно напечатал ID код "
                           "или он стерся при транспортировке. Не волнуйтесь - мы получили ваш товар и знаем, что он ваш, "
                           "просто он временно не отображается в списке. Вы сможете получить его в пункте выдачи, "
                           "наш менеджер свяжется с вами, как только товар поступит.")
            },
            'другой_пользователь': {
                'keywords': ['другой пользователь', 'добавлен другим', 'чужой пользователь'],
                'response': ("Если товар добавлен другим пользователем, это означает, что при сканировании "
                           "на складе в Китае произошла ошибка. Пожалуйста:\n"
                           "1. Напишите нам трек-код\n"
                           "2. Отправьте фото товара\n"
                           "Наши менеджеры исправят ошибку, и товар будет выдан вам согласно трек-коду. "
                           "Менеджер свяжется с вами, как только получит товар.")
            },
            'недостача': {
                'keywords': ['недостача', 'не хватает', 'неполная поставка', 'недостаточно'],
                'response': ("Если в посылке не хватает товара:\n"
                           "1. Свяжитесь с магазином в маркетплейсе\n"
                           "2. Сообщите о недостаче\n"
                           "3. Оставьте заявку на дополнительную отправку или возврат денег\n\n")
            },
            'неправильный_заказ': {
                'keywords': ['неправильный заказ', 'не тот товар', 'ошибка в заказе', 'неверный товар'],
                'response': ("Если вы получили неправильный товар или его качество не соответствует описанию:\n"
                           "1. Свяжитесь с магазином в маркетплейсе\n"
                           "2. Опишите проблему\n"
                           "3. Оставьте заявку на возврат денег\n\n")
            }
        }
    
    def get_response(self, message: str) -> Optional[str]:
        """
        Поиск ответа на вопрос пользователя
        Args:
            message: текст вопроса
        Returns:
            str: ответ из базы знаний или None если ответ не найден
        """
        message = message.lower()
        
        # Проверяем каждую категорию
        for category in self.faq_data.values():
            if any(keyword in message for keyword in category['keywords']):
                return category['response']
        
        return None
    
    def get_faq_list(self) -> str:
        """Получение списка частых вопросов"""
        faq_list = "Частые вопросы:\n\n"
        for i, (topic, data) in enumerate(self.faq_data.items(), 1):
            faq_list += f"{i}. {topic.capitalize()}\n"
        return faq_list